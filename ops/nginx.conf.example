# Example Nginx reverse proxy for AgriLink on EC2
# - Frontend (Next.js) served by PM2 on 127.0.0.1:3000
# - Backend (Express) served by PM2 on 127.0.0.1:5000
# - Proxies /api and /uploads to the backend; everything else to Next.js

server {
    listen 80;
    server_name _;

    # Allow larger uploads (tune as needed)
    client_max_body_size 20m;

    # Common proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Websocket/HTTP2 upgrade (safe defaults)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # API to Express backend
    location /api/ {
        proxy_pass http://127.0.0.1:5000/;
    }

    # Uploads to Express backend (which proxies to S3)
    location /uploads/ {
        proxy_pass http://127.0.0.1:5000/uploads/;
    }

    # Next.js assets
    location /_next/ {
        proxy_pass http://127.0.0.1:3000/_next/;
    }

    # Everything else to Next.js frontend
    location / {
        proxy_pass http://127.0.0.1:3000;
    }
}

# To enable:
# sudo apt-get update && sudo apt-get install -y nginx
# sudo tee /etc/nginx/sites-available/agrilink >/dev/null < ops/nginx.conf.example
# sudo ln -s /etc/nginx/sites-available/agrilink /etc/nginx/sites-enabled/agrilink || true
# sudo nginx -t && sudo systemctl reload nginx

# HTTPS (optional): obtain a certificate for your domain with certbot, then
# update this file to listen 443 ssl http2; and add ssl_certificate lines.